buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.findcheeseheads'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('com.mashape.unirest:unirest-java:1.4.9')
	compile('javax.xml.bind:jaxb-api:2.2.11')
	compile('com.sun.xml.bind:jaxb-core:2.2.11')
	compile('com.sun.xml.bind:jaxb-impl:2.2.11')
	compile('javax.activation:activation:1.1.1')

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

	implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	//implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
}

processResources {
	dependsOn "copyAngular"
}

springBoot {
	buildInfo()
}

task buildAngular(type:Exec) {
	dependsOn "npmInstall"
	workingDir "${angularDir}"
	inputs.dir "${angularDir}"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build", "--prod"
	} else {
		commandLine "ng", "build", "--prod"
	}
}

task copyAngular(type: Copy) {
	dependsOn "buildAngular"
	doFirst {
		mkdir "${buildDir}/resources/main/static/"
	}

	from "${buildDir}/web"
	into "${buildDir}/resources/main/static/"
}
