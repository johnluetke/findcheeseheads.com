buildscript {
	ext {
		angularDir = "$projectDir/src/main/angular"
	}
}

plugins {
	id "com.gorylenko.gradle-git-properties" version "1.5.2"
	id "com.moowork.node" version "1.2.0"
	id "com.palantir.git-version" version "0.11.0"
	id "org.ajoberstar.grgit" version "2.3.0"
	id "org.springframework.boot" version "2.0.5.RELEASE"
}

apply plugin: "java"
apply plugin: "com.moowork.node"
apply plugin: "io.spring.dependency-management"

group = "com.findcheeseheads"
version gitVersion()
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation("com.mashape.unirest:unirest-java:1.4.9")
	implementation("com.sun.xml.bind:jaxb-core:2.2.11")
	implementation("com.sun.xml.bind:jaxb-impl:2.2.11")
	implementation("javax.activation:activation:1.1.1")
	implementation("javax.xml.bind:jaxb-api:2.2.11")
    implementation("mysql:mysql-connector-java")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
}

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
	dateFormatTimeZone = "PST"
	gitPropertiesDir = "${project.rootDir}/src/main/resources"
}

processResources {
	dependsOn "copyAngular"
}

springBoot {
	buildInfo()
}

task buildAngular(type:Exec) {
	dependsOn "npmInstall"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// workingDir "${angularDir}"
	inputs.dir "${angularDir}"
	outputs.dir "${buildDir}/web"

	args = ["build", "--prod"]

	// ng doesn"t exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		executable = "node_modules/.bin/ng"
	} else {
		executable = "node_modules/.bin/ng"
	}
}

task copyAngular(type: Copy) {
	dependsOn "buildAngular"
	doFirst {
		mkdir "${buildDir}/resources/main/static/"
	}

	from "${buildDir}/web"
	into "${buildDir}/resources/main/static/"
}
